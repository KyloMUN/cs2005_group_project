{"version":3,"sources":["registerServiceWorker.js","utils/isEmpty.js","components/LinkButton.js","components/LoadingSpinner.js","components/Sidebar.js","constants.js","reducers/login.js","reducers/whoami.js","reducers/index.js","actions/index.js","lib/api.js","sagas/watchers/login.js","sagas/watchers/whoami.js","sagas/index.js","store.js","screens/Home/index.js","screens/Login/index.js","screens/Logout/index.js","screens/Account/index.js","screens/ChangePassword/index.js","screens/CreateQuiz/index.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","isEmpty","obj","Object","entries","length","constructor","LinkButton","props","react_default","a","createElement","Button","label","onClick","history","push","whereto","margin","bottom","LoadingSpinner","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loading","react_spinners","sizeUnit","size","color","theme","global","colors","brand","Component","Sidebar","loggedIn","whoami","LoadingSpinner_LoadingSpinner","Fragment","Box","width","background","elevation","align","justify","gap","grabOptions","connect","login","withRouter","LOGIN_SAGA","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT_SAGA","CREATE_NEW_USER_SAGA","CREATE_QUIZ_SAGA","GET_WHOAMI_SAGA","GET_WHOAMI_SUCCESS","GET_WHOAMI_FAIL","CLEAR_WHOAMI","CHANGE_PASSWORD_SAGA","initialState","token","combineReducers","arguments","undefined","action","type","objectSpread","classes","username","realname","roles","questionBanks","question_banks","loginSagaSuccess","loginSagaFailed","err","apiUrl","get","_callee","endpoint","_ref","response","regenerator_default","wrap","_context","prev","next","fetch","concat","headers","Authorization","sent","ok","Error","json","abrupt","stop","post","_callee2","data","_ref4","_args2","_context2","method","Accept","Content-Type","body","JSON","stringify","_x5","_login","apply","_callee3","_ref2","password","_context3","getWhoami","_x6","_getWhoami","_callee4","_ref3","_context4","workerLoginSaga","workerLogoutSaga","watchLoginSaga","access_token","put","t0","_marked","_marked2","all","takeLatest","_marked3","workerGetWhoamiSaga","watchGetWhoamiSaga","whoami_marked","whoami_marked2","root","fork","sagas_marked","createBrowserHistory","sagaMiddleware","createSagaMiddleware","middleware","routerMiddleware","composedEnhancers","composeWithDevTools","applyMiddleware","store","createStore","connectRouter","rootReducer","run","sagas","Home","Login","handleUsernameChange","e","setState","target","value","handlePasswordChange","handleLogin","loginSaga","pad","opacity","round","TextInput","placeholder","onChange","dispatch","render","logout","Account","newUsername","newPassword","newRole","studentView","_this$props$whoami","Heading","level","keys","map","key","classname","id","newUsernameChange","newPasswordChange","newRoleChange","handleCreateNewUser","_this$state","createNewUserSaga","teacherView","RadioButtonGroup","options","getWhoamiSaga","includes","role","ChangePassword","oldPassword","handleOldPasswordChange","handleNewPasswordChange","changePasswordSaga","CreateQuiz","quizname","handleSubmit","createQuizSaga","_this2","font","family","height","AppBar","assign","tag","direction","left","right","vertical","style","zIndex","App","showSidebar","toggleAppBar","prevState","Grommet","full","es","lib","fill","App_AppBar","icon","Menu","flex","overflow","horizontal","Route","path","exact","component","Logout","components_Sidebar","rootElement","document","getElementById","App_App","URL","process","origin","addEventListener","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.89fc36f7.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default (obj) => {\n    return Object.entries(obj).length === 0 && obj.constructor === Object;\n};","import React from 'react';\nimport {Button} from 'grommet';\n\nexport default (props) => {\n  return (\n    <Button\n      label={props.label}\n      onClick={() => {props.history.push(props.whereto)}}\n      margin={{bottom: '0.5em'}}\n    />\n  );\n};\n","import React, {Component} from 'react';\nimport {PulseLoader} from 'react-spinners';\n\nimport {theme} from '../App';\n\nexport default class LoadingSpinner extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    loading: true\n    }\n  }\n  render() {\n    return (\n      <PulseLoader\n        sizeUnit='em'\n        size={1}\n        color={theme.global.colors.brand}\n        loading={true}\n      />\n    );\n  }\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport {Box} from 'grommet';\n\nimport {isEmpty} from '../utils/';\nimport LinkButton from './LinkButton';\nimport LoadingSpinner from './LoadingSpinner';\n\nclass Sidebar extends Component {\n  grabOptions() {\n    if (!this.props.loggedIn) {\n      return (\n        <>\n          <LinkButton\n            label=\"Homepage\"\n            whereto='/'\n            history={this.props.history}\n          />\n          <LinkButton\n            label=\"Login\"\n            whereto='/login'\n            history={this.props.history}\n          />\n        </>\n      );\n    }\n\n    if (isEmpty(this.props.whoami)) {\n      return <LoadingSpinner />;\n    }\n\n    return (\n      <>\n        <LinkButton\n          label=\"Homepage\"\n          whereto='/'\n          history={this.props.history}\n          />\n        <LinkButton\n          label=\"Account\"\n          whereto='/account'\n          history={this.props.history}\n        />\n        <LinkButton\n          label=\"Logout\"\n          whereto='/logout'\n          history={this.props.history}\n        />\n      </>\n    );\n  }\n\n  render() {\n    return (\n      <Box\n        width='medium'\n        background='light-2'\n        elevation='small'\n        align='center'\n        justify='center'\n        gap='small'\n      >\n        {this.grabOptions()}\n      </Box>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loggedIn: state.login.loggedIn,\n  whoami: state.whoami,\n});\n\nconst mapDispatchToProps = () => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Sidebar));\n","const LOGIN_SAGA = 'LOGIN_SAGA';\nconst LOGIN_FAIL = 'LOGIN_FAIL';\nconst LOGIN_SUCCESS = 'LOGIN_SUCCESS';\n\nconst LOGOUT_SAGA = 'LOGOUT_SAGA';\n\nconst CREATE_NEW_USER_SAGA = 'CREATE_NEW_USER_SAGA';\nconst CREATE_NEW_USER_SUCCESS = 'CREATE_NEW_USER_SUCCESS';\nconst CREATE_NEW_USER_FAIL = 'CREATE_NEW_USER_FAIL';\n\nconst CREATE_QUIZ_SAGA = 'CREATE_QUIZ_SAGA';\nconst CREATE_QUIZ_SUCCESS = 'CREATE_QUIZ_SUCCESS';\nconst CREATE_QUIZ_FAIL = 'CREATE_QUIZ_FAIL';\n\nconst GET_WHOAMI_SAGA = 'GET_WHOAMI_SAGA';\nconst GET_WHOAMI_SUCCESS = 'GET_WHOAMI_SUCCESS';\nconst GET_WHOAMI_FAIL = 'GET_WHOAMI_FAIL';\n\nconst CLEAR_WHOAMI = 'CLEAR_WHOAMI';\n\nconst CHANGE_PASSWORD_SAGA = 'CHANGE_PASSWORD_SAGA';\n\nexport {\n  LOGIN_SAGA,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n\n  CREATE_NEW_USER_SAGA,\n  CREATE_NEW_USER_SUCCESS,\n  CREATE_NEW_USER_FAIL,\n\n  CREATE_QUIZ_SAGA,\n  CREATE_QUIZ_SUCCESS,\n  CREATE_QUIZ_FAIL,\n\n  LOGOUT_SAGA,\n\n  GET_WHOAMI_SAGA,\n  GET_WHOAMI_SUCCESS,\n  GET_WHOAMI_FAIL,\n\n  CLEAR_WHOAMI,\n\n  CHANGE_PASSWORD_SAGA,\n};\n","import {\n  LOGIN_SAGA,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n\n  LOGOUT_SAGA,\n} from '../constants';\n\nconst initialState = {\n  token: null,\n  loggedIn: false,\n};\n\nexport default function login(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_SAGA:\n      return state;\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        token: action.token,\n        loggedIn: true,\n      };\n    case LOGIN_FAIL:\n      return state;\n    case LOGOUT_SAGA:\n      return {...initialState};\n    default:\n      return state;\n  }\n}\n","import {\n  GET_WHOAMI_SAGA,\n  GET_WHOAMI_SUCCESS,\n  GET_WHOAMI_FAIL,\n  CLEAR_WHOAMI,\n} from '../constants';\n\nconst initialState = {};\n\nexport default function whoami(state = initialState, action) {\n  switch (action.type) {\n    case GET_WHOAMI_SAGA:\n      return state;\n    case GET_WHOAMI_SUCCESS:\n      return {\n        ...state,\n        classes: action.classes,\n        username: action.username,\n        realname: action.realname,\n        roles: action.roles,\n        questionBanks: action.question_banks,\n      };\n    case GET_WHOAMI_FAIL:\n      return state;\n    case CLEAR_WHOAMI:\n      return {...initialState};\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\n\nimport loginReducer from './login';\nimport whoamiReducer from './whoami';\n\nexport default combineReducers({\n  login: loginReducer,\n  whoami: whoamiReducer,\n});\n","import {\n  LOGIN_SAGA,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n\n  LOGOUT_SAGA,\n\n  CREATE_NEW_USER_SAGA,\n  CREATE_NEW_USER_SUCCESS,\n  CREATE_NEW_USER_FAIL,\n\n  CREATE_QUIZ_SAGA,\n  CREATE_QUIZ_SUCCESS,\n  CREATE_QUIZ_FAIL,\n\n  GET_WHOAMI_SAGA,\n  GET_WHOAMI_SUCCESS,\n  GET_WHOAMI_FAIL,\n\n  CLEAR_WHOAMI,\n\n  CHANGE_PASSWORD_SAGA,\n} from '../constants';\n\nexport function loginSaga(username, password) {\n  return {\n    type: LOGIN_SAGA,\n    username,\n    password,\n  };\n}\n\nexport function loginSagaSuccess(token) {\n  return {\n    type: LOGIN_SUCCESS,\n    token,\n  };\n}\n\nexport function loginSagaFailed(err) {\n  return {\n    type: LOGIN_FAIL,\n    err,\n  };\n}\n\nexport function logoutSaga() {\n  return {\n    type: LOGOUT_SAGA,\n  };\n}\n\nexport function createNewUserSaga(token, username, password, role) {\n  return {\n    type: CREATE_NEW_USER_SAGA,\n    token,\n    username,\n    password,\n    role,\n  };\n}\n\nexport function getWhoamiSaga(token) {\n  return {\n    type: GET_WHOAMI_SAGA,\n    token,\n  };\n}\n\nexport function getWhoamiSagaSuccess(whoami) {\n  return {\n    type: GET_WHOAMI_SUCCESS,\n    ...whoami,\n  };\n}\n\nexport function getWhoamiSagaFailed(err) {\n  return {\n    type: GET_WHOAMI_FAIL,\n    err,\n  };\n}\n\nexport function clearWhoami() {\n  return {\n    type: CLEAR_WHOAMI,\n  }\n}\n\nexport function changePasswordSaga(oldPassword, newPassword) {\n  return {\n    type: CHANGE_PASSWORD_SAGA,\n    oldPassword,\n    newPassword,\n  };\n}\n\nexport function createQuizSaga() {\n  return {\n    type: CREATE_QUIZ_SAGA,\n  };\n}\n","//const apiUrl = process.env.REACT_APP_API_URL;\nconst apiUrl = 'http://localhost:5000/api';\n\nasync function get(endpoint, {token}) {\n  const response = await fetch(`${apiUrl}/${endpoint}`, {\n    headers: {\n      'Authorization': `JWT ${token}`\n    },\n  });\n  if(!response.ok) {\n    throw new Error(response);\n  }\n  return await response.json();\n}\n\nasync function post(endpoint, data, {token} = {}) {\n  const response = await fetch(`${apiUrl}/${endpoint}`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n  const json = await response.json();\n  if(!response.ok) {\n    throw new Error(json);\n  }\n  return json;\n}\n\nexport async function login({username, password}) {\n  const response = await post('login', {username, password});\n  return response;\n}\n\nexport async function getWhoami({token}) {\n  const response = await get('whoami', {token});\n  return response;\n}\n","import {push} from 'react-router-redux';\nimport {\n  put,\n  takeLatest,\n  call,\n  all,\n} from 'redux-saga/effects';\n\nimport {\n  LOGIN_SAGA,\n  LOGOUT_SAGA,\n} from '../../constants';\nimport {\n  loginSagaSuccess,\n  loginSagaFailed,\n  clearWhoami,\n} from '../../actions';\nimport {login} from '../../lib/api';\n\nfunction* workerLoginSaga(username, password) {\n  try {\n    const response = yield call(login, username, password);\n\n    const token = response.access_token;\n    if (token !== undefined) {\n      yield put(loginSagaSuccess(token));\n      yield put(push('/account'));\n    }\n    else {\n      yield put(loginSagaFailed(response));\n    }\n  } catch (err) {\n    yield put(loginSagaFailed(err));\n  }\n}\n\nfunction* workerLogoutSaga() {\n  yield put(clearWhoami());\n}\n\nexport default function* watchLoginSaga() {\n  yield all([\n    takeLatest(LOGIN_SAGA, workerLoginSaga),\n    takeLatest(LOGOUT_SAGA, workerLogoutSaga)\n  ]);\n}\n","import {\n  put,\n  takeLatest,\n  call\n} from 'redux-saga/effects';\n\nimport {GET_WHOAMI_SAGA} from '../../constants';\nimport {\n  getWhoamiSagaSuccess,\n  getWhoamiSagaFailed,\n} from '../../actions';\nimport {getWhoami} from '../../lib/api';\n\nfunction* workerGetWhoamiSaga(token) {\n  try {\n    const response = yield call(getWhoami, token);\n    yield put(getWhoamiSagaSuccess(response));\n  } catch (err) {\n    yield put(getWhoamiSagaFailed(err));\n  }\n}\n\nexport default function* watchGetWhoamiSaga() {\n  yield takeLatest(GET_WHOAMI_SAGA, workerGetWhoamiSaga);\n}\n","import {all, fork} from 'redux-saga/effects';\n\nimport watchLoginSaga from './watchers/login';\nimport watchGetWhoamiSaga from './watchers/whoami';\n\nexport default function* root() {\n  yield all([\n    fork(watchLoginSaga),\n    fork(watchGetWhoamiSaga),\n  ]);\n}\n","import {createStore, applyMiddleware} from 'redux';\nimport {connectRouter, routerMiddleware} from 'connected-react-router';\nimport {createBrowserHistory} from 'history';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './reducers';\nimport sagas from './sagas';\n\nexport const history = createBrowserHistory();\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst initialState = {};\nconst middleware = [\n  routerMiddleware(history),\n  sagaMiddleware,\n];\n\nconst composedEnhancers = composeWithDevTools(\n  applyMiddleware(...middleware),\n);\n\nconst store = createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers,\n);\n\nsagaMiddleware.run(sagas);\n\nexport default store;\n","import React, {Component} from 'react';\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div>\n        <p>Hello World!</p>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {\n  Box,\n  Button,\n  TextInput,\n} from 'grommet';\n\nimport {loginSaga} from '../../actions';\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: '',\n  }\n\n  handleUsernameChange = (e) => {\n    this.setState({username: e.target.value});\n  };\n  handlePasswordChange = (e) => {\n    this.setState({password: e.target.value});\n  };\n\n  handleLogin = () => {\n    this.props.loginSaga(this.state.username, this.state.password);\n  };\n\n  render() {\n    return (\n      <Box\n        pad='large'\n        align='center'\n        background={{color: 'light-1', opacity: 'strong'}}\n        round\n        gap='small'\n      >\n        <TextInput\n          placeholder='Username'\n          value={this.state.username}\n          onChange={this.handleUsernameChange}\n        />\n        <TextInput\n          type='password'\n          placeholder='Password'\n          value={this.state.password}\n          onChange={this.handlePasswordChange}\n        />\n        <Button\n          label=\"Login\"\n          onClick={this.handleLogin}\n        />\n      </Box>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loginSaga: (username, password) => dispatch(loginSaga(username, password))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\n\nimport {logoutSaga} from '../../actions';\n\nclass Login extends Component {\n  componentDidMount() {\n    this.props.logout();\n    this.props.history.push('/login');\n  }\n\n  render = () => null;\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => ({\n  logout: () => dispatch(logoutSaga()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router';\nimport {\n  Heading,\n  Box,\n  Button,\n  TextInput,\n  RadioButtonGroup,\n} from 'grommet';\n\nimport {\n  getWhoamiSaga,\n  createNewUserSaga,\n} from '../../actions';\nimport {isEmpty} from '../../utils';\nimport LoadingSpinner from '../../components/LoadingSpinner';\nimport LinkButton from '../../components/LinkButton';\n\nclass Account extends Component {\n  state = {\n    newUsername: '',\n    newPassword: '',\n    newRole: '',\n  }\n\n  componentDidMount() {\n    if (!this.props.loggedIn) {\n      this.props.history.push('/login');\n    }\n    else {\n      this.props.getWhoamiSaga(this.props.token);\n    }\n  }\n\n  studentView = () => {\n    const {\n      username,\n      realname,\n      classes,\n    } = this.props.whoami;\n\n    return (\n      <>\n        <Heading level='4'>Hello {realname ? realname : username}, here are your classes:</Heading>\n        {\n          Object.keys(classes).map((key) => (\n            <LinkButton\n              label={classes[key].classname}\n              key={key}\n              whereto={`/view/class/${classes[key].id}`}\n              history={this.props.history}\n            />\n          ))\n        }\n        <LinkButton\n          label='Change password'\n          whereto='/changepassword'\n          history={this.props.history}\n        />\n      </>\n    );\n  };\n\n  newUsernameChange = (e) => {\n    this.setState({newUsername: e.target.value});\n  };\n  newPasswordChange = (e) => {\n    this.setState({newPassword: e.target.value});\n  };\n  newRoleChange = (e) => {\n    this.setState({newRole: e.target.value});\n  };\n\n  handleCreateNewUser = () => {\n    const {\n      newUsername,\n      newPassword,\n      newRole,\n    } = this.state;\n\n    this.props.createNewUserSaga(\n      this.props.token, newUsername, newPassword, newRole,\n    );\n  };\n\n  teacherView = () => {\n    return (\n      <>\n        <LinkButton\n          label='Create new quiz'\n          whereto='/new/quiz'\n          history={this.props.history}\n        />\n        <Box\n          pad='large'\n          align='center'\n          background={{color: 'light-1', opacity: 'strong'}}\n          round\n          gap='small'\n        >\n          <Heading level='4' margin='none'>Create new user</Heading>\n          <TextInput\n            type='password'\n            placeholder='Username'\n            value={this.state.newUsername}\n            onChange={this.newUsernameChange}\n          />\n          <TextInput\n            type='password'\n            placeholder='Password'\n            value={this.state.newPassword}\n            onChange={this.newPasswordChange}\n          />\n          <RadioButtonGroup\n            options={['Student', 'Professor']}\n            value={this.state.newRole}\n            onChange={this.newRoleChange}\n          />\n          <Button\n            label='Create'\n            onClick={this.handleCreateNewUser}\n          />\n        </Box>\n      </>\n    )\n  }\n\n  render() {\n    const {whoami} = this.props;\n    if (isEmpty(whoami)) {\n      return <LoadingSpinner />;\n    }\n\n    if (whoami.roles.includes('professor')) {\n      return this.teacherView();\n    }\n\n    return this.studentView();\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  token: state.login.token,\n  loggedIn: state.login.loggedIn,\n  whoami: state.whoami,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getWhoamiSaga: (token) => dispatch(getWhoamiSaga(token)),\n  createNewUserSaga: (token, username, password, role) => dispatch(\n    createNewUserSaga(token, username, password, role)\n  ),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Account));\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {\n  Box,\n  Button,\n  TextInput,\n} from 'grommet';\n\nimport {changePasswordSaga} from '../../actions';\n\nclass ChangePassword extends Component {\n  state = {\n    oldPassword: '',\n    newPassword: '',\n  }\n\n  handleOldPasswordChange = (e) => {\n    this.setState({oldPassword: e.target.value});\n  };\n  handleNewPasswordChange = (e) => {\n    this.setState({newPassword: e.target.value});\n  };\n\n  handlePasswordChange = () => {\n    this.props.changePasswordSaga(this.state.oldPassword, this.state.newPassword);\n  };\n\n  render() {\n    return (\n      <Box\n        pad='large'\n        align='center'\n        background={{color: 'light-1', opacity: 'strong'}}\n        round\n        gap='small'\n      >\n        <TextInput\n          type='password'\n          placeholder='Old password'\n          value={this.state.oldPassword}\n          onChange={this.handleOldPasswordChange}\n        />\n        <TextInput\n          type='password'\n          placeholder='New password'\n          value={this.state.newPassword}\n          onChange={this.handleNewPasswordChange}\n        />\n        <Button\n          label=\"Change\"\n          onClick={this.handlePasswordChange}\n        />\n      </Box>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changePasswordSaga: (oldPassword, newPassword) => dispatch(changePasswordSaga(oldPassword, newPassword))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {\n  Box,\n  Button,\n  TextInput,\n} from 'grommet';\n\nimport {createQuizSaga} from '../../actions';\n\nclass CreateQuiz extends Component {\n  state = {\n    quizname: '',\n  }\n\n  handleSubmit = () => {\n    this.props.createQuizSaga();\n  };\n\n  render() {\n    return (\n      <Box\n        pad='large'\n        align='center'\n        background={{color: 'light-1', opacity: 'strong'}}\n        round\n        gap='small'\n      >\n        <TextInput\n          placeholder='Quiz name'\n          value={this.state.quizname}\n          onChange={(e) => this.setState({quizname: e.target.quizname})}\n        />\n        <Button\n          label='Submit'\n          onClick={this.handleSubmit}\n        />\n      </Box>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => ({\n  createQuizSaga: () => dispatch(createQuizSaga())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateQuiz);\n","import React, {Component} from 'react';\nimport {Provider} from 'react-redux';\nimport {ConnectedRouter} from 'connected-react-router';\nimport {Route} from 'react-router-dom';\nimport {\n  Box,\n  Heading,\n  Grommet,\n  Button,\n} from 'grommet';\nimport {\n  Menu,\n} from 'grommet-icons'\n\nimport './App.css';\n\nimport Sidebar from './components/Sidebar';\nimport store, {history} from './store';\nimport Home from './screens/Home';\nimport Login from './screens/Login';\nimport Logout from './screens/Logout';\nimport Account from './screens/Account';\nimport ChangePassword from './screens/ChangePassword';\nimport CreateQuiz from './screens/CreateQuiz';\n\nexport const theme = {\n  global: {\n    colors: {\n      brand: '#BF263C',\n    },\n    font: {\n      family: 'Roboto',\n      size: '14px',\n      height: '20px',\n    },\n  },\n};\n\nconst AppBar = (props) => (\n  <Box\n    tag='header'\n    direction='row'\n    align='center'\n    justify='between'\n    background='brand'\n    pad={{left: 'medium', right: 'small', vertical: 'small'}}\n    elevation='medium'\n    style={{zIndex: '1'}}\n    {...props}\n  />\n);\n\nexport default class App extends Component {\n  state = {\n    showSidebar: false,\n  }\n\n  toggleAppBar = () => {\n    this.setState((prevState) => ({showSidebar: !prevState.showSidebar}));\n  };\n\n  render() {\n    return (\n      <Grommet theme={theme} full>\n        <Provider store={store}>\n          <ConnectedRouter history={history}>\n            <Box fill>\n              <AppBar>\n                <Heading level='3' margin='none'>Quizm</Heading>\n                <Button\n                  icon={<Menu />}\n                  onClick={this.toggleAppBar}\n                />\n              </AppBar>\n              <Box direction='row' flex overflow={{horizontal: 'hidden'}}>\n                <Box flex align='center' justify='center'>\n                  <Route path='/' exact component={Home} />\n                  <Route path='/new/quiz' component={CreateQuiz} />\n                  <Route path='/login' component={Login} />\n                  <Route path='/logout' component={Logout} />\n                  <Route path='/account' component={Account} />\n                  <Route path='/changepassword' component={ChangePassword} />\n                </Box>\n                {this.state.showSidebar && <Sidebar />}\n              </Box>\n            </Box>\n          </ConnectedRouter>\n        </Provider>\n      </Grommet>\n    );\n  }\n}\n","import React from 'react';\nimport {render} from 'react-dom';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\n\nrender(<App />, rootElement);\n\nregisterServiceWorker();\n"],"sourceRoot":""}